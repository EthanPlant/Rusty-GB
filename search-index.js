var searchIndex = JSON.parse('{\
"emu":{"doc":"","t":"DLLLLLLLLLLLLFMLLLLL","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main","rom","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":[[0,"emu"]],"d":["","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2],"f":[0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[[2,3],4],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[],[[9,[8]]]],[[]],[[]],0,[[],7],[[],7],[[],10],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]]],"c":[],"p":[[3,"Command"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"TypeId"]]},\
"gblib":{"doc":"","t":"DLLALLLLLLADLLLLMLLLL","n":["Gameboy","borrow","borrow_mut","cpu","from","into","new","try_from","try_into","type_id","cpu","Cpu","borrow","borrow_mut","from","into","mmu","new","try_from","try_into","type_id"],"q":[[0,"gblib"],[10,"gblib::cpu"],[11,"gblib::cpu::cpu"]],"d":["The Gameboy emulator","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Initialize the emulator","","","","","Emulation of the Gameboy CPU","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The MMU (Memory Management Unit)","","","",""],"i":[0,2,2,0,2,2,2,2,2,2,0,0,5,5,5,5,5,5,5,5,5],"f":[0,[[]],[[]],0,[[]],[[]],[1,2],[[],3],[[],3],[[],4],0,0,[[]],[[]],[[]],[[]],0,[1,5],[[],3],[[],3],[[],4]],"c":[],"p":[[15,"str"],[3,"Gameboy"],[4,"Result"],[3,"TypeId"],[3,"Cpu"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
