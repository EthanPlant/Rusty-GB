var searchIndex = JSON.parse('{\
"emu":{"doc":"","t":"DLLLLLLLLLLLLFMLLLLL","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main","rom","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":[[0,"emu"]],"d":["","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2],"f":[0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[[2,3],4],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[],[[9,[8]]]],[[]],[[]],0,[[],7],[[],7],[[],10],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]]],"c":[],"p":[[3,"Command"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"TypeId"]]},\
"gblib":{"doc":"","t":"AAAADLLLLLMLLLLDLLLLLLLLLDLLLLLLLLLLLLL","n":["cpu","gameboy","mmu","cpu","Cpu","borrow","borrow_mut","from","into","new","reg","step","try_from","try_into","type_id","Gameboy","borrow","borrow_mut","from","into","new","step","try_from","try_into","type_id","Memory","borrow","borrow_mut","from","get_byte","get_word","into","new","new_with_rom","set_byte","set_word","try_from","try_into","type_id"],"q":[[0,"gblib"],[3,"gblib::cpu"],[4,"gblib::cpu::cpu"],[15,"gblib::gameboy"],[25,"gblib::mmu"]],"d":["","","","","Emulation of the Gameboy CPU","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","The CPU registers","Step through the emulator","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new Gameboy","Step through the emulation","","","","The MMU (Memory Management Unit) is responsible for â€¦","","","Returns the argument unchanged.","Reads a byte from the memory address space","Reads a word from the memory address space","Calls <code>U::from(self)</code>.","","","Writes a byte to the memory address space","Writes a word to the memory address space","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,6,6,6,6,0,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],0,[[1,2]],[[],3],[[],3],[[],4],0,[[]],[[]],[[]],[[]],[5,6],[6],[[],3],[[],3],[[],4],0,[[]],[[]],[[]],[[2,[8,[7]]],9],[[2,[8,[7]]],10],[[]],[[],2],[5,2],[[2,[8,[7]],9]],[[2,[8,[7]],10]],[[],3],[[],3],[[],4]],"c":[],"p":[[3,"Cpu"],[3,"Memory"],[4,"Result"],[3,"TypeId"],[15,"str"],[3,"Gameboy"],[15,"usize"],[8,"Into"],[15,"u8"],[15,"u16"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
